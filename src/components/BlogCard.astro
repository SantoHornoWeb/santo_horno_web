---
export interface Props {
  title: string;
  excerpt: string;
  image: string;
  date: string;
  category?: string;
  fullContent?: string; // Contenido completo para el modal
}

const { title, excerpt, image, date, category, fullContent } = Astro.props;
const modalId = `modal-${Math.random().toString(36).substr(2, 9)}`;
---

<article class="blog-card hover-lift fade-in">
  <div class="blog-image">
    <img src={image} alt={title} loading="lazy" />
    {category && <span class="blog-category">{category}</span>}
  </div>
  
  <div class="blog-content">
    <div class="blog-meta">
      <time class="blog-date">{date}</time>
    
    </div>
    
    <h3 class="blog-title">{title}</h3>
    <p class="blog-excerpt">{excerpt}</p>

    <button class="blog-link" data-modal={modalId}>
      Leer m치s
      <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
        <path d="M8.59 16.59L13.17 12L8.59 7.41L10 6l6 6-6 6l-1.41-1.41z"/>
      </svg>
    </button>
  </div>
</article>

<!-- Modal -->
<div id={modalId} class="modal-overlay">
  <div class="modal-container">
    <div class="modal-header">
      <div class="modal-image">
        <img src={image} alt={title} />
        {category && <span class="modal-category">{category}</span>}
      </div>
      <button class="modal-close" aria-label="Cerrar modal">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
          <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
        </svg>
      </button>
    </div>
    
    <div class="modal-content">
      <div class="modal-meta">
        <time class="modal-date">{date}</time>
      </div>
      
      <h2 class="modal-title">{title}</h2>
      
      <div class="modal-body">
        {fullContent ? (
          <div set:html={fullContent} />
        ) : (
          <p>{excerpt}</p>
        )}
      </div>
    </div>
  </div>
</div>

<script>
  // Funci칩n para abrir modal
  function openModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
      modal.classList.add('active');
      document.body.style.overflow = 'hidden';
    }
  }

  // Funci칩n para cerrar modal
  function closeModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
      modal.classList.remove('active');
      document.body.style.overflow = 'auto';
    }
  }

  // Event listeners para los botones de "Leer m치s"
  document.querySelectorAll('.blog-link[data-modal]').forEach(button => {
    button.addEventListener('click', (e) => {
      e.preventDefault();
      const modalId = button.getAttribute('data-modal');
      openModal(modalId);
    });
  });

  // Event listeners para cerrar modales
  document.querySelectorAll('.modal-close').forEach(closeBtn => {
    closeBtn.addEventListener('click', () => {
      const modal = closeBtn.closest('.modal-overlay');
      if (modal) {
        closeModal(modal.id);
      }
    });
  });

  // Cerrar modal al hacer clic en el overlay
  document.querySelectorAll('.modal-overlay').forEach(overlay => {
    overlay.addEventListener('click', (e) => {
      if (e.target === overlay) {
        closeModal(overlay.id);
      }
    });
  });

  // Cerrar modal con ESC
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      const activeModal = document.querySelector('.modal-overlay.active');
      if (activeModal) {
        closeModal(activeModal.id);
      }
    }
  });
</script>

<style>
  .blog-card {
    background: var(--color-white);
    border-radius: var(--border-radius-lg);
    overflow: hidden;
    box-shadow: var(--shadow-sm);
    transition: var(--transition);
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .blog-card:hover {
    box-shadow: var(--shadow-lg);
  }

  .blog-image {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .blog-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .blog-card:hover .blog-image img {
    transform: scale(1.05);
  }

  .blog-category {
    position: absolute;
    top: var(--spacing-sm);
    left: var(--spacing-sm);
    background: var(--color-primary);
    color: var(--color-white);
    padding: 0.25rem 0.5rem;
    border-radius: var(--border-radius);
    font-size: 0.75rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .blog-content {
    padding: var(--spacing-md);
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .blog-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-sm);
    font-size: 0.85rem;
    color: var(--color-gray);
  }

  .blog-date {
    font-weight: 500;
  }

  .blog-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: var(--spacing-sm);
    color: var(--color-primary);
    line-height: 1.3;
  }

  .blog-excerpt {
    color: var(--color-gray);
    line-height: 1.6;
    margin-bottom: var(--spacing-md);
    flex: 1;
  }

  .blog-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--color-primary);
    font-weight: 500;
    text-decoration: none;
    transition: var(--transition);
    margin-top: auto;
    background: none;
    border: none;
    cursor: pointer;
    font-family: var(--font-body);
    font-size: 1rem;
  }

  .blog-link:hover {
    color: var(--color-secondary);
    transform: translateX(5px);
  }

  .blog-link svg {
    transition: transform 0.3s ease;
  }

  .blog-link:hover svg {
    transform: translateX(3px);
  }

  /* Modal Styles */
  .modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(248, 241, 239, 0.8);
    backdrop-filter: blur(4px);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    padding: var(--spacing-sm);
  }

  .modal-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .modal-container {
    background: var(--color-white);
    border-radius: var(--border-radius-lg);
    max-width: 800px;
    width: 100%;
    max-height: 90vh;
    overflow: hidden;
    box-shadow: var(--shadow-lg);
    transform: translateY(50px) scale(0.95);
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;
  }

  .modal-overlay.active .modal-container {
    transform: translateY(0) scale(1);
  }

  .modal-header {
    position: relative;
    width: 100%;
    height: 250px;
    overflow: hidden;
  }

  .modal-image {
    width: 100%;
    height: 100%;
    position: relative;
  }

  .modal-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .modal-category {
    position: absolute;
    top: var(--spacing-sm);
    left: var(--spacing-sm);
    background: var(--color-primary);
    color: var(--color-white);
    padding: 0.5rem 1rem;
    border-radius: var(--border-radius);
    font-size: 0.85rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-family: var(--font-secondary);
  }

  .modal-close {
    position: absolute;
    top: var(--spacing-sm);
    right: var(--spacing-sm);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: var(--transition);
    color: var(--color-dark);
  }

  .modal-close:hover {
    background: var(--color-white);
    transform: scale(1.1);
  }

  .modal-content {
    padding: var(--spacing-md);
    overflow-y: auto;
    flex: 1;
  }

  .modal-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-sm);
    font-size: 0.9rem;
    color: var(--color-gray);
    padding-bottom: var(--spacing-sm);
    border-bottom: 1px solid var(--color-light-gray);
  }

  .modal-date {
    font-weight: 600;
    color: var(--color-primary);
  }

  .modal-read-time {
    color: var(--color-secondary);
    font-weight: 500;
  }

  .modal-title {
    font-size: 2rem;
    font-weight: 800;
    margin-bottom: var(--spacing-md);
    color: var(--color-primary);
    line-height: 1.2;
    font-family: var(--font-primary);
  }

  .modal-body {
    line-height: 1.8;
    color: var(--color-dark);
  }

  .modal-body p {
    margin-bottom: var(--spacing-sm);
  }

  .modal-body h3 {
    margin-top: var(--spacing-md);
    margin-bottom: var(--spacing-sm);
  }



  /* Responsive para el modal */
  @media (max-width: 768px) {
    .modal-overlay {
      padding: var(--spacing-xs);
    }

    .modal-container {
      max-height: 95vh;
    }

    .modal-header {
      height: 200px;
    }

    .modal-content {
      padding: var(--spacing-sm);
    }

    .modal-title {
      font-size: 1.5rem;
    }

    .modal-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.25rem;
    }
  }

  @media (max-width: 480px) {
    .modal-overlay {
      padding: 0.5rem;
    }

    .modal-header {
      height: 180px;
    }

    .modal-title {
      font-size: 1.25rem;
    }

    .modal-close {
      width: 35px;
      height: 35px;
    }
  }

  /* Responsive para la card */
  @media (max-width: 768px) {
    .blog-card {
      width: 80%;
      margin: auto;
    }
    
    .blog-image {
      height: 180px;
    }
    
    .blog-content {
      padding: var(--spacing-sm);
    }
    
    .blog-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.25rem;
    }
  }

  @media (max-width: 480px) {
    .blog-card {
      width: 85%;
      margin: auto;
    }
    
    .blog-image {
      height: 180px;
    }
    
    .blog-content {
      padding: var(--spacing-sm);
    }
    
    .blog-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.25rem;
    }
  }
</style>